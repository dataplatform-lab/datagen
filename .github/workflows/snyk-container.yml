# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: Snyk Container

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  schedule:
    - cron: "17 13 * * 4"

permissions:
  contents: read

jobs:
  snyk-container:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v3
      - uses: snyk/actions/setup@master

      - name: Build a Docker image
        run: docker build -t bluezery/datagen:ci .

      - name: Snyk container
        # continue-on-error: true
        run: uv run snyk container test bluezery/datagen:ci --file=Dockerfile --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: snyk.sarif
